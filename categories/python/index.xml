<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on A programmer&#39;s viewpoint</title>
    <link>https://nitinahuja.github.io/categories/python/</link>
    <description>Recent content in Python on A programmer&#39;s viewpoint</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 28 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://nitinahuja.github.io/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Netflix Viewing Analysis</title>
      <link>https://nitinahuja.github.io/2023/netflix-viewing-analysis/</link>
      <pubDate>Tue, 28 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://nitinahuja.github.io/2023/netflix-viewing-analysis/</guid>
      <description>Introduction In this post I want to take a look at my Netflix viewing habits.
The first step is getting the data and you can request your viewing data from the Accounts section in your Netflix account. Netflix will allow you to download a zip file with many different ways to slice this information.
# Import the libraries import pandas as pd import numpy as np import seaborn as sns from pandas.</description>
    </item>
    
    <item>
      <title>Access log parsing with Spark and schema extraction from query string</title>
      <link>https://nitinahuja.github.io/2016/access-log-parsing-with-spark-and-schema-extraction-from-query-string/</link>
      <pubDate>Wed, 03 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://nitinahuja.github.io/2016/access-log-parsing-with-spark-and-schema-extraction-from-query-string/</guid>
      <description>I needed to parse server logs and create Spark DataFrames to query information from the query string parameters. My naive version kept throwing errors about mismatched number of fields in schema and those in the row being queried.
It turns out I was dealing with over 350 different query string params across the logs. This could change over time and there was no way I was going to add these programmatically by hand.</description>
    </item>
    
  </channel>
</rss>
