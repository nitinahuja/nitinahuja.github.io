<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on A programmer&#39;s viewpoint</title>
    <link>/categories/r/</link>
    <description>Recent content in R on A programmer&#39;s viewpoint</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 21 Nov 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Vehicle Fuel Economy - exploratory analysis</title>
      <link>/2018/vehicle-fuel-economy-exploratory-analysis/</link>
      <pubDate>Wed, 21 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/vehicle-fuel-economy-exploratory-analysis/</guid>
      <description>Introduction In this post, we are going to look at some publicly available data to dig deeper into exploratory data analysis and machine learning techniques. I am going to start by fetching some data from the inter webs, this data is available at the FuelEconomy.gov site. This file has fuel economy data for all cars sold in the United States for several years.
Let’s start by loading the libraries we need:</description>
    </item>
    
    <item>
      <title>NPS - Exploratory analysis in R - Text analysis</title>
      <link>/2017/nps-exploratory-text-analysis/</link>
      <pubDate>Sun, 22 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/nps-exploratory-text-analysis/</guid>
      <description>NPS analysis NPS - Comment analysis In an previous post we performed some EDA on the NPS data we have. Recall that as part of the question about the likelihood of recommending a service or business there is an optional text response about why they picked this score.
Let’s try and see what those responses are all about. We had already performed some sentiment analysis on this text we are now going to attempt to classify this text into topics.</description>
    </item>
    
    <item>
      <title>Heat maps in R</title>
      <link>/2017/heatmaps-in-r/</link>
      <pubDate>Mon, 11 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/heatmaps-in-r/</guid>
      <description>Heatmaps Heat maps are invaluable in displaying a large amount of continuous data contained in a 2d matrix. This post is meant to show a way to create a print worthy heat map in R.
Let’s start by loading the required packages.
suppressPackageStartupMessages({ library(ggplot2) library(ggthemes) library(viridis) library(scales) library(tidyr) }) Data Our data is from a business that receives sales calls 24x7. Let’s read and see what the data looks like.</description>
    </item>
    
    <item>
      <title>NPS - Exploratory analysis in R</title>
      <link>/2017/nps-exploratory-analysis-in-r/</link>
      <pubDate>Mon, 28 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/nps-exploratory-analysis-in-r/</guid>
      <description>NPS analysis What is net promorter score (NPS)? Net Promoter Score or NPS is a customer loyalty metric and was developed by Fred Reichheld and it asks respondents to answer a single question. &amp;gt; How likely are you to recommend this product? The respondents are asked to score between 0 and 10. 10 being “most likely” to recommend and 0 being “least likely”.
An additional optional question is asked about why they picked this score and the response to that is usually a text comment.</description>
    </item>
    
    <item>
      <title>Forecasting in R - Philadelphia crime data</title>
      <link>/2016/forecasting-in-r-philadelphia-crime-data/</link>
      <pubDate>Wed, 26 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/forecasting-in-r-philadelphia-crime-data/</guid>
      <description>Exploring crime in Philadelphia This is a large and intersting dataset and has data points stretching back over 10 years. Several explorations have pointed out that crime seems to be seasonal and I wanted to explore this with a time series. Assuming that seasonal trends might repeat themselves, I am exploring this using the forecast package and using linear regression to predict trends.
suppressPackageStartupMessages({ library(data.table) library(forecast) library(knitr) }) Data size and structure.</description>
    </item>
    
    <item>
      <title>Revenue forecast for seasonal business</title>
      <link>/2016/revenue-forecast-for-seasonal-business/</link>
      <pubDate>Mon, 09 May 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/revenue-forecast-for-seasonal-business/</guid>
      <description>Revenue forecasting with linear methods. This post highlights linear regression techniques on time series data. We have some weekly sales data from a small business that is expected to have seasonal trends. A bike rental business in a major tourist city. Let’s dive into the data. Load up the required packages.
suppressPackageStartupMessages({ library(forecast) }) Load the data, we have two columns with weekly revenue numbers from two different sources. Online and Phone; these correspond to sales online and via phone call to the business.</description>
    </item>
    
  </channel>
</rss>